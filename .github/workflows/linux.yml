name: Linux

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache externals
      id: cache-externals
      uses: actions/cache@v3
      with:
        path: ${{runner.temp}}/boost_1_88_0
        key: cache-externals

    - name: Get externals
      if: steps.cache-externals.outputs.cache-hit != 'true'
      working-directory: ${{runner.temp}}
      run: |
        sudo apt-get install g++-10
        pip3 install pyOpenSSL
        # Download Boost.
        wget https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz
        # Extract.
        tar -xvzf boost_1_88_0.tar.gz
        # Build.
        cd boost_1_88_0
        ./bootstrap.sh
        ./b2 link=static

    - name: Build
      env:
        BOOST_ROOT: ${{runner.temp}}/boost_1_88_0
        Boost_INCLUDE_DIR: ${{runner.temp}}/boost_1_88_0/libs/headers
      run: |
        mkdir -p build/release
        cmake -S . -B build/release \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_CXX_COMPILER=g++-10 \
              -DBoost_USE_STATIC_LIBS=ON \
              -DBoost_DIR="$BOOST_ROOT/stage/lib/cmake/Boost-1.88.0"
        cmake --build build/release

    - name: Test libftp
      env:
        LIBFTP_TEST_SERVER_PATH: ${{github.workspace}}/test/server/server.py
      working-directory: ${{github.workspace}}/build/release/test
      run: ./ftp_tests

    - name: Test cmdline
      working-directory: ${{github.workspace}}/build/release/app/cmdline/test
      run: ./cmdline_tests